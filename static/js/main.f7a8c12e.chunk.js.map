{"version":3,"sources":["components/SearchResult.js","components/LightSwitch.js","darkMode.js","img/sun.png","img/moon.png","components/BookList.js","App.js","reportWebVitals.js","index.js"],"names":["SearchResult","data","className","href","url","target","rel","lang","code","title","author","LightSwitch","themes","dark","light","swapMode","theme","document","body","classList","add","remove","ThemeContext","createContext","changeTheme","ThemeContextWrapper","props","useState","setTheme","Provider","value","children","BookList","fpb","jsonToArray","json","arr","sections","forEach","section","includes","push","entries","entry","language","subsections","subsection","App","undefined","setData","dataArray","setDataArray","setIndex","loading","setLoading","searchTerm","searchParams","searchResults","setSearchResults","useCookies","cookies","error","resultsList","useEffect","a","axios","get","result","lightMode","darkMode","fetchData","fuse","Fuse","useExtendedSearch","findAllMatches","shouldSort","includeScore","threshold","keys","andQuery","orQuery","Object","key","$or","search","$and","slice","relevantLists","find","o","item","langCode","isSubject","id","x","match","replaceAll","toLowerCase","listing","name","concat","length","map","StrictMode","Consumer","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CookiesProvider"],"mappings":"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","file":"static/js/main.f7a8c12e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction SearchResult({ data }) {\r\n  return (\r\n    <li className=\"result\">\r\n        <a href={data.url} target=\"_blank\" rel=\"noreferrer\">\r\n        ({data.lang.code}) {data.title}{data.author ? ` by ${data.author}` : \"\"}\r\n        </a>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction LightSwitch(App){\r\n\tconst [lightMode, setLightMode] = useState(false);\r\n\treturn (\r\n\t\t<img src={lightMode ? \"https://toppng.com/uploads/preview/sun-11545692406nbrflpmao0.png\" : \"https://www.kindpng.com/picc/m/293-2939577_clip-art-drawing-of-moon-and-stars-star.png\"}\r\n\t\tonClick = {()=>setLightMode(!lightMode)} style={{width: \"100px\", height: \"100px\",display: \"block\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  marginLeft: \"auto\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  marginRight: \"auto\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }}/>\r\n\t)\r\n}\r\n\r\nexport default LightSwitch;","import React, { useState, useEffect, createContext } from \"react\";\r\n\r\n//https://levelup.gitconnected.com/dark-mode-in-react-533faaee3c6e\r\n\r\nexport const themes = {\r\n  dark: \"\",\r\n  light: \"dark-content\",\r\n};\r\n\r\nexport const swapMode = (theme) => {\r\n    switch (theme) {\r\n      case themes.light:\r\n        document.body.classList.add('dark-content');\r\n        break;\r\n      case themes.dark:\r\n      default:\r\n        document.body.classList.remove('dark-content');\r\n        break;\r\n    }\r\n  }\r\n\r\nexport const ThemeContext = createContext({\r\n    theme: themes.dark,\r\n  changeTheme: () => {},\r\n});\r\n\r\nexport default function ThemeContextWrapper(props) {\r\n  const [theme, setTheme] = useState(props.theme);\r\n\r\n  function changeTheme(theme) {\r\n    setTheme(theme);\r\n  }\r\n // console.log(theme)\r\n  swapMode(theme)\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/sun.4c5a4fb0.png\";","export default __webpack_public_path__ + \"static/media/moon.dd634065.png\";","import React, { useEffect, useState } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport rehypeSlug from 'rehype-slug'\r\n\r\nfunction BookList({changeParameter}) {\r\n  let [markdown, setMarkdown] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  let params = useParams();\r\n\r\n  useEffect(() => {\r\n    changeParameter('lang.code', params.lang);\r\n  }, [params.lang]);\r\n    \r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        setLoading(true);\r\n        let result = await axios.get(\r\n          `https://raw.githubusercontent.com/EbookFoundation/free-programming-books/main/books/free-programming-books-${params.lang}.md`\r\n        );\r\n        setMarkdown(result.data);\r\n      } catch (e) {\r\n        console.log(\"Couldn't get data. Please try again later\")\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  if(loading){\r\n      return <p>Loading...</p>\r\n  }\r\n  console.log(markdown);\r\n  return <section><ReactMarkdown children={markdown} rehypePlugins={[rehypeSlug]} /></section>;\r\n}\r\n\r\nexport default BookList;\r\n","import React, { useState, useEffect, createContext } from \"react\";\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport LangFilters from \"./components/LangFilters\";\r\nimport SectDropdown from \"./components/SectDropdown\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport SearchResult from \"./components/SearchResult\";\r\nimport LightSwitch from \"./components/LightSwitch\";\r\nimport axios from \"axios\";\r\nimport Fuse from \"fuse.js\";\r\nimport { ThemeContext, themes, swapMode } from \"./darkMode\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport Default from \"./components/Default\";\r\n\r\nimport SunImg from \"./img/sun.png\";\r\nimport MoonImg from \"./img/moon.png\";\r\nimport BookList from \"./components/BookList\";\r\n\r\nconst fpb = null;\r\n\r\nfunction jsonToArray(json) {\r\n  let arr = [];\r\n  let sections = [];\r\n  json.children[0].children.forEach((document) => {\r\n    document.sections.forEach((section) => {\r\n      if (!sections.includes(section.section)) sections.push(section.section);\r\n      section.entries.forEach((entry) => {\r\n        arr.push({\r\n          author: entry.author,\r\n          title: entry.title,\r\n          url: entry.url,\r\n          lang: document.language,\r\n          section: section.section,\r\n        });\r\n      });\r\n      section.subsections.forEach((subsection) => {\r\n        subsection.entries.forEach((entry) => {\r\n          arr.push({\r\n            author: entry.author,\r\n            title: entry.title,\r\n            url: entry.url,\r\n            lang: document.language,\r\n            section: section.section,\r\n            subsection: subsection.section,\r\n          });\r\n        });\r\n      });\r\n    });\r\n  });\r\n  return { arr: arr, sections: sections };\r\n}\r\n\r\nfunction App() {\r\n  const [data, setData] = useState(undefined); // keeps the state of the json\r\n  const [dataArray, setDataArray] = useState([]); // put everything into one array. uses more memory, but search is faster and less complex\r\n  // eslint-disable-next-line\r\n  const [index, setIndex] = useState([]); // used for \"table of contents\". currently unused\r\n  const [loading, setLoading] = useState(true); // Determines whether to show spinner\r\n  const [searchParams, setSearchParams] = useState({ searchTerm: \"\" });\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"lightMode\"]);\r\n\r\n  const [lightMode, setLightMode] = useState(true);\r\n\r\n  // eslint-disable-next-line\r\n  const [error, setError] = useState(\"\");\r\n\r\n  let resultsList = null; // the html string containing the search results\r\n\r\n  const changeParameter = (param, value) => {\r\n    // Lets a child component set the value of the search term\r\n    setSearchParams({ ...searchParams, [param]: value });\r\n  };\r\n\r\n  // fetches data the first time the page renders\r\n  useEffect(() => {\r\n    swapMode(cookies.lightMode ? themes.lightMode : themes.darkMode);\r\n    async function fetchData() {\r\n      try {\r\n        setLoading(true);\r\n        let result = await axios.get(\r\n          \"https://raw.githubusercontent.com/FreeEbookFoundationBot/free-programming-books-json/main/fpb.json\"\r\n        );\r\n        setData(result.data);\r\n        let { arr, sections } = jsonToArray(result.data);\r\n        setDataArray(arr);\r\n        setIndex(sections);\r\n      } catch (e) {\r\n        // setError(\"Couldn't get data. Please try again later\")\r\n        setData(fpb);\r\n        let { arr, sections } = jsonToArray(fpb);\r\n        setIndex(sections);\r\n        setDataArray(arr);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // fires when searchTerm changes\r\n  // Finds most relevant title or author\r\n  // THIS IS THE MAIN SEARCH FUNCTION\r\n  useEffect(() => {\r\n    if (dataArray) {\r\n      const fuseOptions = {\r\n        useExtendedSearch: true, // see fuse.js documentation\r\n        findAllMatches: true, //continue searching after first match\r\n        shouldSort: true, // sort by proximity score\r\n        includeScore: true, // includes score in results\r\n        threshold: 0.2, // threshold for fuzzy-search,\r\n        keys: [\"author\", \"title\", \"lang.code\", \"section\"],\r\n      };\r\n\r\n      // create new fuse given the array of books and the fuse options from above\r\n      let fuse = new Fuse(dataArray, fuseOptions);\r\n      let andQuery = []; // for filters that MUST be matched, like language\r\n      let orQuery = []; // filters where any may be matched, like author or title\r\n\r\n      // for each search param\r\n      for (const [key, value] of Object.entries(searchParams)) {\r\n        if (value === null || value === \"\") continue;\r\n        if (key === \"lang.code\" || key === \"section\") {\r\n          // the '^' means it must be an exact match at the beginning\r\n          // this is because lang.code and section are strict filters\r\n          andQuery.push({ [key]: `^${value}` });\r\n        }\r\n        if (key === \"searchTerm\") {\r\n          orQuery.push({ author: value });\r\n          orQuery.push({ title: value });\r\n        }\r\n      }\r\n      // Nest the 'or' query inside the 'and' query\r\n      // Necessary step, a quirk with fuse.js\r\n      andQuery.push({ $or: orQuery });\r\n      // Perform the search\r\n      let result = fuse.search({\r\n        $and: andQuery,\r\n      });\r\n      // filter to top results\r\n      result = result.slice(0, 40);\r\n\r\n      // Goes through the list of results\r\n      let relevantLists = [];\r\n      result.forEach((entry) => {\r\n        // Checks if a new entry has already been made with the given programming language and human language.\r\n        let obj = relevantLists.find(\r\n          (o) => o.item.section === entry.item.section && o.item.lang.code === entry.item.lang.code\r\n        );\r\n        if (!obj && entry.item.lang.code) {\r\n          let langCode = entry.item.lang.code;\r\n          let section = entry.item.subsection ? entry.item.subsection : entry.item.section;\r\n          // English is split into the subjects and langs file. The parser flags which type of entry it is to use here\r\n          if (langCode === \"en\") {\r\n            if (entry.item.lang.isSubject) {\r\n              langCode = \"subjects\";\r\n            } else {\r\n              langCode = \"langs\";\r\n            }\r\n          }\r\n\r\n          let id = section;\r\n\r\n          // Some ids are in HTML tags, so this will extract that id to form proper links\r\n          if (id.includes(\"<a\")) {\r\n            let x = id.match(/\"(.*?)\"/)[0];\r\n            id = x ? x.replaceAll(/\\\"/g, \"\") : \"FAIL\";\r\n            section = id;\r\n          }\r\n\r\n          // List of id properties fixed with this line:\r\n          // 1. Must be all lowercase\r\n          // 2. Spaces are hyphens\r\n          // 3. Parentheses, ampersands, and slashes aren't allowed at all\r\n          id = id\r\n            .toLowerCase()\r\n            .replaceAll(\" \", \"-\")\r\n            .replaceAll(/\\(|\\)|\\&|\\/|\\./g, \"\");\r\n\r\n          // Creates a listing for the broader list of entries\r\n          let listing = {\r\n            item: {\r\n              author: \"\",\r\n              lang: entry.item.lang,\r\n              section: entry.item.section,\r\n              title: `List of all ${section} resources in ${entry.item.lang.name}`,\r\n              url: `https://ebookfoundation.github.io/free-programming-books/books/free-programming-books-${langCode}.html#${id}`,\r\n            },\r\n          };\r\n\r\n          relevantLists.push(listing);\r\n        }\r\n      });\r\n      // Keep only the first 5 as more than that became cumbersome with broad searches\r\n      relevantLists = relevantLists.slice(0, 5);\r\n      result = relevantLists.concat(result);\r\n      setSearchResults(result);\r\n      // console.log(result);\r\n    }\r\n  }, [searchParams, dataArray]);\r\n\r\n  if (loading) {\r\n    // if still fetching resource\r\n    return <h1>Loading...</h1>;\r\n  }\r\n  if (error) {\r\n    return <h1>Error: {error}</h1>;\r\n  }\r\n  if (searchParams.searchTerm && searchResults.length !== 0) {\r\n    resultsList =\r\n      searchResults &&\r\n      searchResults.map((entry) => {\r\n        return <SearchResult data={entry.item} />;\r\n      });\r\n  }\r\n  return (\r\n    (\r\n      <React.StrictMode>\r\n        <HashRouter>\r\n          <div className=\"wrapper\">\r\n            <ThemeContext.Consumer>\r\n              {({ changeTheme }) => {\r\n                let willBeDarkMode = cookies.lightMode && cookies.lightMode.toLowerCase() !== \"true\"; //whether or not we are currently light mode and will become dark mode\r\n                changeTheme(willBeDarkMode ? themes.light : themes.dark);\r\n                return (\r\n                  <img\r\n                    src={willBeDarkMode ? MoonImg : SunImg}\r\n                    onClick={() => {\r\n                      setCookie(\"lightMode\", willBeDarkMode);\r\n                      changeTheme(willBeDarkMode ? themes.light : themes.dark);\r\n                    }}\r\n                    style={{ width: \"20px\", height: \"20px\", display: \"block\", marginLeft: \"auto\" }}\r\n                  />\r\n                );\r\n              }}\r\n            </ThemeContext.Consumer>\r\n            <header className=\"header\">\r\n              <h1>\r\n                <a href=\"/free-programming-books-search/\">free-programming-books</a>\r\n              </h1>\r\n\r\n              <p>\r\n                <img\r\n                  className=\"emoji\"\r\n                  title=\":books:\"\r\n                  alt=\":books:\"\r\n                  src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png\"\r\n                  height=\"20\"\r\n                  width=\"20\"\r\n                />{\" \"}\r\n                Freely available programming books\r\n              </p>\r\n\r\n              <p className=\"view\">\r\n                <a href=\"https://github.com/EbookFoundation/free-programming-books\" target=\"_blank\" rel=\"noreferrer\">\r\n                  View the Project on GitHub <small>EbookFoundation/free-programming-books</small>\r\n                </a>\r\n              </p>\r\n              <p>\r\n                Does a link not work?\r\n                <br />\r\n                <a\r\n                  href=\"https://github.com/EbookFoundation/free-programming-books/issues/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  Report an error on GitHub\r\n                </a>\r\n              </p>\r\n\r\n              <div>\r\n                <SearchBar changeParameter={changeParameter} />\r\n                <LangFilters changeParameter={changeParameter} data={data} langCode={searchParams[\"lang.code\"]} />\r\n              </div>\r\n            </header>\r\n\r\n            <section className=\"search-results\">\r\n              {resultsList ? (\r\n                <div>\r\n                  <br />\r\n                  <h2>Search Results</h2>\r\n                  <ul>{resultsList}</ul>\r\n                </div>\r\n              ) : searchParams.searchTerm ? (\r\n                <div>\r\n                  <br />\r\n                  <h2>No results found.</h2>\r\n                </div>\r\n              ) : (\r\n                <Routes>\r\n                  <Route path=\"/free-programming-books-search\" element={<Default />} />\r\n                  <Route\r\n                    path=\"/free-programming-books-search/books/:lang\"\r\n                    element={<BookList changeParameter={changeParameter} />}\r\n                  />\r\n                </Routes>\r\n              )}\r\n            </section>\r\n            <footer>\r\n              <p>\r\n                This project is maintained by{\" \"}\r\n                <a href=\"https://github.com/EbookFoundation\" target=\"_blank\" rel=\"noreferrer\">\r\n                  EbookFoundation\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <small>\r\n                  Hosted on GitHub Pages — Theme by{\" \"}\r\n                  <a href=\"https://github.com/orderedlist\" target=\"_blank\" rel=\"noreferrer\">\r\n                    orderedlist\r\n                  </a>\r\n                </small>\r\n              </p>\r\n            </footer>\r\n          </div>\r\n        </HashRouter>\r\n      </React.StrictMode>\r\n    ),\r\n    document.getElementById(\"root\")\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App';\r\nimport ThemeContextWrapper from './darkMode';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nReactDOM.render(\r\n<CookiesProvider>\r\n\t<ThemeContextWrapper>\r\n\t  <React.StrictMode>\r\n\t\t<App />\r\n\t  </React.StrictMode>\r\n\t</ThemeContextWrapper>\r\n</CookiesProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}