{"version":3,"sources":["components/LangFilters.js","components/SearchBar.js","components/SearchResult.js","components/ParsedLink.js","components/MarkdownParser.js","img/sun.png","img/moon.png","darkMode.js","App.js","reportWebVitals.js","index.js"],"names":["LangFilters","options","changeParameter","data","langCode","useState","languages","setLanguages","selected","setSelected","showFilters","setShow","handleChange","e","target","value","useEffect","queries","queryString","parse","document","location","search","lang","langArray","code","name","children","forEach","language","length","push","sort","a","b","map","type","className","onChange","checked","createOption","filterList","onClick","SearchBar","props","getElementById","defaultTerm","onSubmit","preventDefault","id","autoComplete","placeholder","SearchResult","href","url","rel","title","author","ParsedLink","sect","folder","setFolder","file","setFile","hrefSplit","split","MarkdownParser","markdown","setMarkdown","loading","setLoading","result","axios","get","console","log","fetchData","remarkRehypeOptions","allowDangerousHtml","rehypePlugins","rehypeSlug","rehypeRaw","components","node","inline","startsWith","charAt","themes","dark","light","swapMode","theme","body","classList","add","remove","ThemeContext","createContext","changeTheme","ThemeContextWrapper","setTheme","Provider","jsonToArray","json","arr","sections","i","section","includes","entries","entry","subsections","subsection","App","undefined","setData","dataArray","setDataArray","defaultSearch","searchTerm","searchParams","setSearchParams","searchResults","setSearchResults","useCookies","cookies","setCookie","subject","setQueries","error","setError","resultsList","param","lightMode","darkMode","fuse","Fuse","useExtendedSearch","findAllMatches","shouldSort","includeScore","includeMatches","threshold","keys","andQuery","orQuery","Object","key","$or","$and","slice","item","Consumer","willBeDarkMode","toLowerCase","alt","src","MoonImg","SunImg","style","width","height","display","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CookiesProvider","StrictMode"],"mappings":"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","file":"static/js/main.48e4d32d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\nfunction LangFilters({ changeParameter, data, langCode }) {\r\n  const [languages, setLanguages] = useState([]);\r\n  const [selected, setSelected] = useState(langCode);\r\n  const [showFilters, setShow] = useState(false);\r\n  let options = null;\r\n\r\n  const handleChange = (e) => {\r\n    changeParameter(\"lang.code\", e.target.value);\r\n    setSelected(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let queries = queryString.parse(document.location.search);\r\n    if (queries.lang) {\r\n      if (queries.lang === \"langs\" || queries.lang === \"subjects\") {\r\n        changeParameter(\"lang.code\", \"en\");\r\n        setSelected(\"en\");\r\n      } else {\r\n        changeParameter(\"lang.code\", queries.lang);\r\n        setSelected(queries.lang);\r\n      }\r\n    } else {\r\n      changeParameter(\"lang.code\", \"\");\r\n      setSelected(\"\")\r\n    }\r\n  }, []);\r\n\r\n  useEffect(\r\n    // run whenever data changes\r\n    () => {\r\n      if (data) {\r\n        let langArray = [{ code: \"en\", name: \"English\" }];\r\n        data.children[0].children.forEach((document) => {\r\n          if (typeof document.language.name === \"string\" && document.language.name.length > 0) {\r\n            //make sure the language is valid and not blank\r\n            //console.log(\"LANGUAGE: \" + document.language.name)\r\n            if (document.language.code !== \"en\") {\r\n              // used to ensure only one English is listed\r\n              langArray.push(document.language);\r\n            }\r\n          }\r\n        });\r\n        langArray.sort((a, b) => a.name > b.name);\r\n        setLanguages(langArray);\r\n      }\r\n    },\r\n    [data]\r\n  );\r\n\r\n  const createOption = (language) => {\r\n    return (\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            className=\"lang\"\r\n            key={language.code}\r\n            value={language.code}\r\n            onChange={handleChange}\r\n            checked={language.code === selected}\r\n          />\r\n          {language.name}\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  options =\r\n    languages &&\r\n    languages.map((language) => {\r\n      return createOption(language);\r\n    });\r\n\r\n  let filterList = (\r\n    <form className=\"filters\">\r\n      <label>\r\n        <input\r\n          type=\"radio\"\r\n          key=\"all\"\r\n          className=\"sect-select\"\r\n          value=\"\"\r\n          onChange={handleChange}\r\n          checked={\"\" === selected}\r\n        />\r\n        All Languages\r\n      </label>\r\n      {options}\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"langFilters\">\r\n      <div className=\"filterHeader\">\r\n        <h3>Filter by Language</h3>\r\n        <button onClick={() => setShow(!showFilters)}>{showFilters ? \"-\" : \"+\"}</button>\r\n      </div>\r\n      {showFilters ? filterList : \"\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LangFilters;\r\n","import React, {useEffect} from \"react\";\r\n\r\nfunction SearchBar(props) {\r\n  useEffect(() => {\r\n    document.getElementById(\"searchBar\").value = props.defaultTerm\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    props.changeParameter(\"searchTerm\", e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n      name=\"searchBar\"\r\n      className=\"searchbar\"\r\n    >\r\n      <input\r\n        id=\"searchBar\"\r\n        autoComplete=\"off\"\r\n        type=\"text\"\r\n        name=\"searchTerm\"\r\n        placeholder={\"Search Book or Author\"}\r\n        className=\"searchterm\"\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nfunction SearchResult({ data }) {\r\n  return (\r\n    <li className=\"result\">\r\n        <a href={data.url} target=\"_blank\" rel=\"noreferrer\">\r\n          ({data.lang.code}) {data.title}{data.author ? ` by ${data.author}` : \"\"}\r\n        </a>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction ParsedLink({ children, sect, props }) {\r\n  const [folder, setFolder] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Splits the original link into the folder and file names\r\n    // If there is only one entry then the folder is the root directory and the entry is the file\r\n    let hrefSplit = props.href.split(\"/\");\r\n\r\n    if (hrefSplit.length === 2) {\r\n      // Case when the\r\n      // Some docs reference back to the root directory which would give the folder \"..\"\r\n      // When that happens, skip setting the folder as it should stay null.\r\n      if (hrefSplit[0] !== \"..\") {\r\n        setFolder(hrefSplit[0]);\r\n      }\r\n      setFile(hrefSplit[1]);\r\n    } else {\r\n      // Only a file is given\r\n      setFile(hrefSplit[0]);\r\n      // When the current section is docs, all relative links stay in docs\r\n      if (sect === \"docs\") {\r\n        setFolder(sect);\r\n      } else {\r\n        setFolder(null);\r\n      }\r\n    }\r\n  }, [props.href]);\r\n\r\n  if (folder) {\r\n    return <a href={`/free-programming-books-search/?&sect=${folder}&file=${file}`}>{children}</a>;\r\n  } else {\r\n    return <a href={`/free-programming-books-search/?file=${file}`}>{children}</a>;\r\n  }\r\n}\r\n\r\nexport default ParsedLink;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport rehypeSlug from \"rehype-slug\";\r\nimport rehypeRaw from \"rehype-raw\";\r\n\r\nimport ParsedLink from \"./ParsedLink\";\r\n\r\nfunction MarkdownParser({ file, sect }) {\r\n  let [markdown, setMarkdown] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        // console.log({sect: sect, file: file});\r\n        setLoading(true);\r\n        let result = null;\r\n        if (!sect && !file) { // Default to getting the README\r\n          result = await axios.get( \r\n            `https://raw.githubusercontent.com/EbookFoundation/free-programming-books/main/README.md`\r\n          );\r\n        } else if (!sect && file) { // Should only occur when getting a file in root directory\r\n          result = await axios.get( \r\n            `https://raw.githubusercontent.com/EbookFoundation/free-programming-books/main/${file}`\r\n          );\r\n        } else {\r\n          result = await axios.get( // Both sect and file exist so construct a full URL\r\n            `https://raw.githubusercontent.com/EbookFoundation/free-programming-books/main/${sect}/${file}`\r\n          );\r\n        }\r\n\r\n        setMarkdown(result.data);\r\n      } catch (e) {\r\n        console.log(\"Couldn't get data. Please try again later\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [file, sect]);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (!sect || sect === \"docs\") {\r\n    return (\r\n      <section>\r\n        <ReactMarkdown\r\n          children={markdown}\r\n          remarkRehypeOptions={{ allowDangerousHtml: true }} // HTML is required for the all ids to be properly applied\r\n          rehypePlugins={[rehypeSlug, rehypeRaw]}\r\n          components={{\r\n            a({ node, inline, className, children, ...props }) {\r\n              if (props.href.startsWith(\"http\") || props.href.charAt(0) === '#') {\r\n                return (\r\n                  <a className={className} {...props}>\r\n                    {children}\r\n                  </a>\r\n                );\r\n              }\r\n              return <ParsedLink children={children} className={className} sect={sect} props={props} />;\r\n            },\r\n          }}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <ReactMarkdown\r\n        children={markdown}\r\n        remarkRehypeOptions={{ allowDangerousHtml: true }} // HTML is required for the all ids to be properly applied\r\n        rehypePlugins={[rehypeSlug, rehypeRaw]}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MarkdownParser;\r\n","export default __webpack_public_path__ + \"static/media/sun.4c5a4fb0.png\";","export default __webpack_public_path__ + \"static/media/moon.dd634065.png\";","import React, { useState, createContext } from \"react\";\r\n\r\n//https://levelup.gitconnected.com/dark-mode-in-react-533faaee3c6e\r\n\r\nexport const themes = {\r\n  dark: \"\",\r\n  light: \"dark-content\",\r\n};\r\n\r\nexport const swapMode = (theme) => {\r\n    switch (theme) {\r\n      case themes.light:\r\n        document.body.classList.add('dark-content');\r\n        break;\r\n      case themes.dark:\r\n      default:\r\n        document.body.classList.remove('dark-content');\r\n        break;\r\n    }\r\n  }\r\n\r\nexport const ThemeContext = createContext({\r\n    theme: themes.dark,\r\n  changeTheme: () => {},\r\n});\r\n\r\nexport default function ThemeContextWrapper(props) {\r\n  const [theme, setTheme] = useState(props.theme);\r\n\r\n  function changeTheme(theme) {\r\n    setTheme(theme);\r\n  }\r\n // console.log(theme)\r\n  swapMode(theme)\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Fuse from \"fuse.js\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport queryString  from \"query-string\";\r\n\r\nimport LangFilters from \"./components/LangFilters\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport SearchResult from \"./components/SearchResult\";\r\nimport MarkdownParser from \"./components/MarkdownParser\";\r\n\r\nimport SunImg from \"./img/sun.png\";\r\nimport MoonImg from \"./img/moon.png\";\r\nimport { ThemeContext, themes, swapMode } from \"./darkMode\";\r\n\r\nfunction jsonToArray(json) {\r\n  // list of all books\r\n  let arr = [];\r\n  // list of all topics (sections)\r\n  let sections = [];\r\n  // for each markdown document\r\n  for (let i = 0; i < json.children.length; i++) {\r\n    json.children[i].children.forEach((document) => {\r\n      // for each topic in the markdown\r\n      // these are typically h2 and h3 tags in the markdown\r\n      document.sections.forEach((section) => {\r\n        // Add section to master list if it's not there\r\n        if (!sections.includes(section.section)) sections.push(section.section);\r\n        // Add new entries that were under an h2 tag\r\n        section.entries.forEach((entry) => {\r\n          arr.push({\r\n            author: entry.author,\r\n            title: entry.title,\r\n            url: entry.url,\r\n            lang: document.language,\r\n            section: section.section,\r\n          });\r\n        });\r\n        // Add new entries that were under an h3 tag\r\n        section.subsections.forEach((subsection) => {\r\n          subsection.entries.forEach((entry) => {\r\n            arr.push({\r\n              author: entry.author,\r\n              title: entry.title,\r\n              url: entry.url,\r\n              lang: document.language,\r\n              section: section.section,\r\n              subsection: subsection.section,\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  return { arr: arr, sections: sections };\r\n}\r\n\r\nfunction App() {\r\n  // keeps the state of the json\r\n  const [data, setData] = useState(undefined); \r\n  // put all books into one array. uses more memory, but search is faster and less complex\r\n  const [dataArray, setDataArray] = useState([]);\r\n  // Keeps track if all resources are loaded\r\n  const [loading, setLoading] = useState(true);\r\n  // State keeping track of all search parameters\r\n  // use the changeParameter function to set, NOT setSearchParams\r\n  // changeParameter will retain the rest of the state\r\n  let defaultSearch = queryString.parse(document.location.search).search || \"\";\r\n  const [searchParams, setSearchParams] = useState({ searchTerm: defaultSearch, \"lang.code\": \"\" });\r\n  // array of all search results\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [cookies, setCookie, ] = useCookies([\"lightMode\"]);\r\n  const [queries, setQueries] = useState({ lang: \"\", subject: \"\" });\r\n\r\n  // eslint-disable-next-line\r\n  const [error, setError] = useState(\"\");\r\n\r\n  let resultsList = null; // the html string containing the search results\r\n\r\n  // Used to change the search parameters state\r\n  // Heavily used in child components to set the state \r\n  const changeParameter = (param, value) => {\r\n    setSearchParams({ ...searchParams, [param]: value });\r\n  };\r\n\r\n  // fetches data the first time the page renders\r\n  useEffect(() => {  \r\n    swapMode(cookies.lightMode ? themes.lightMode : themes.darkMode);\r\n    async function fetchData() {\r\n      try {\r\n        setQueries(queryString.parse(document.location.search));\r\n    if (queries.lang) {\r\n      if (queries.lang === \"langs\" || queries.lang === \"subjects\") {\r\n        changeParameter(\"lang.code\", \"en\");\r\n      } else {\r\n        changeParameter(\"lang.code\", queries.lang);\r\n      }\r\n    }\r\n        // setLoading(true);\r\n        let result = await axios.get(\r\n          \"https://raw.githubusercontent.com/EbookFoundation/free-programming-books-search/main/fpb.json\"\r\n        );\r\n        setData(result.data);\r\n        // eslint-disable-next-line\r\n        let { arr, sections } = jsonToArray(result.data);\r\n        setDataArray(arr);\r\n      } catch (e) {\r\n        setError(\"Couldn't get data. Please try again later\")\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // fires when searchTerm changes\r\n  // Finds most relevant title or author\r\n  // THIS IS THE MAIN SEARCH FUNCTION\r\n  useEffect(() => {\r\n    if (dataArray) {\r\n      const fuseOptions = {\r\n        useExtendedSearch: true, // see fuse.js documentation\r\n        findAllMatches: true, //continue searching after first match\r\n        shouldSort: true, // sort by proximity score\r\n        includeScore: true, // includes score in results\r\n        includeMatches: true,\r\n        threshold: 0.2, // threshold for fuzzy-search,\r\n        keys: [\"author\", \"title\", \"lang.code\", \"section\"],\r\n      };\r\n\r\n      // create new fuse given the array of books and the fuse options from above\r\n      let fuse = new Fuse(dataArray, fuseOptions);\r\n      let andQuery = []; // for filters that MUST be matched, like language\r\n      let orQuery = []; // filters where any may be matched, like author or title\r\n\r\n      // for each search param\r\n      for (const [key, value] of Object.entries(searchParams)) {\r\n        if (value === null || value === \"\") continue;\r\n        if (key === \"lang.code\" || key === \"section\") {\r\n          // the '^' means it must be an exact match at the beginning\r\n          // this is because lang.code and section are strict filters\r\n          andQuery.push({ [key]: `^${value}` });\r\n        }\r\n        if (key === \"searchTerm\") {\r\n          orQuery.push({ author: value });\r\n          orQuery.push({ title: value });\r\n        }\r\n      }\r\n      // Nest the 'or' query inside the 'and' query\r\n      // Necessary step, a quirk with fuse.js\r\n      andQuery.push({ $or: orQuery });\r\n      // Perform the search\r\n      let result = fuse.search({\r\n        $and: andQuery,\r\n      });\r\n      // filter to top results\r\n      result = result.slice(0, 40);\r\n      // console.log(result)\r\n\r\n      // Goes through the list of results\r\n      // let relevantLists = [];\r\n      // result.forEach((entry) => {\r\n      //   // Checks if a new entry has already been made with the given programming language and human language.\r\n      //   let obj = relevantLists.find(\r\n      //     (o) => o.item.section === entry.item.section && o.item.lang.code === entry.item.lang.code\r\n      //   );\r\n      //   if (!obj && entry.item.lang.code) {\r\n      //     let langCode = entry.item.lang.code;\r\n      //     let section = entry.item.subsection ? entry.item.subsection : entry.item.section;\r\n      //     // English is split into the subjects and langs file. The parser flags which type of entry it is to use here\r\n      //     if (langCode === \"en\") {\r\n      //       if (entry.item.lang.isSubject) {\r\n      //         langCode = \"subjects\";\r\n      //       } else {\r\n      //         langCode = \"langs\";\r\n      //       }\r\n      //     }\r\n\r\n      //     // Consider moving function out of here\r\n      //     let id = section;\r\n\r\n      //     // Some ids are in HTML tags, so this will extract that id to form proper links\r\n      //     if (id.includes(\"<a\")) {\r\n      //       let x = id.match(/\"(.*?)\"/)[0];\r\n      //       id = x ? x.replaceAll(/\\\"/g, \"\") : \"FAIL\";\r\n      //       section = id;\r\n      //     }\r\n\r\n      //     // List of id properties fixed with this line:\r\n      //     // 1. Must be all lowercase\r\n      //     // 2. Spaces are hyphens\r\n      //     // 3. Parentheses, ampersands, and slashes aren't allowed at all\r\n      //     id = id\r\n      //       .toLowerCase()\r\n      //       .replaceAll(\" \", \"-\")\r\n      //       .replaceAll(/\\(|\\)|\\&|\\/|\\./g, \"\");\r\n\r\n      //     // Creates a listing for the broader list of entries\r\n      //     let listing = {\r\n      //       item: {\r\n      //         author: \"\",\r\n      //         lang: entry.item.lang,\r\n      //         section: entry.item.section,\r\n      //         title: `List of all ${section} books in ${entry.item.lang.name}`,\r\n      //         url: `/free-programming-books-search?sect=books&lang=${langCode}&file=free-programming-books-${langCode}#${section}`,\r\n      //         samePage: true,\r\n      //       },\r\n      //     };\r\n\r\n      //     relevantLists.push(listing);\r\n      //   }\r\n      // });\r\n      // // Keep only the first 5 as more than that became cumbersome with broad searches\r\n      // relevantLists = relevantLists.slice(0, 5);\r\n      // result = relevantLists.concat(result);\r\n      setSearchResults(result);\r\n      // console.log(result);\r\n    }\r\n  }, [searchParams, dataArray]);\r\n\r\n  // if (loading) {\r\n  //   // if still fetching resource\r\n  //   return <h1>Loading...</h1>;\r\n  // }\r\n  if (error) {\r\n    return <h1>Error: {error}</h1>;\r\n  }\r\n  if (searchParams.searchTerm && searchResults.length !== 0) {\r\n    resultsList =\r\n      searchResults &&\r\n      searchResults.map((entry) => {\r\n        return <SearchResult data={entry.item} />;\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <ThemeContext.Consumer>\r\n        {({ changeTheme }) => {\r\n          let willBeDarkMode = cookies.lightMode && cookies.lightMode.toLowerCase() !== \"true\"; //whether or not we are currently light mode and will become dark mode\r\n          changeTheme(willBeDarkMode ? themes.light : themes.dark);\r\n          return (\r\n            <img\r\n              alt=\"Toggle light/dark mode\"\r\n              src={willBeDarkMode ? MoonImg : SunImg}\r\n              onClick={() => {\r\n                setCookie(\"lightMode\", willBeDarkMode);\r\n                changeTheme(willBeDarkMode ? themes.light : themes.dark);\r\n              }}\r\n              style={{ width: \"20px\", height: \"20px\", display: \"block\", marginLeft: \"auto\" }}\r\n            />\r\n          );\r\n        }}\r\n      </ThemeContext.Consumer>\r\n      <header className=\"header\">\r\n        <h1>\r\n          <a href=\"/free-programming-books-search/\">free-programming-books</a>\r\n        </h1>\r\n\r\n        <p>\r\n          <img\r\n            className=\"emoji\"\r\n            title=\":books:\"\r\n            alt=\":books:\"\r\n            src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png\"\r\n            height=\"20\"\r\n            width=\"20\"\r\n          />{\" \"}\r\n          Freely available programming books\r\n        </p>\r\n\r\n        <p className=\"view\">\r\n          <a href=\"https://github.com/EbookFoundation/free-programming-books\" target=\"_blank\" rel=\"noreferrer\">\r\n            View the Project on GitHub <small>EbookFoundation/free-programming-books</small>\r\n          </a>\r\n        </p>\r\n        <p>\r\n          Does a link not work?\r\n          <br />\r\n          <a href=\"https://github.com/EbookFoundation/free-programming-books/issues/\" target=\"_blank\" rel=\"noreferrer\">\r\n            Report an error on GitHub\r\n          </a>\r\n        </p>\r\n\r\n        <div>\r\n          {loading ? (\r\n            <p />\r\n          ) : (\r\n            <div>\r\n              <SearchBar changeParameter={changeParameter} defaultTerm={searchParams.searchTerm} />{\" \"}\r\n              <LangFilters changeParameter={changeParameter} data={data} langCode={searchParams[\"lang.code\"]} />{\" \"}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </header>\r\n\r\n      <section className=\"search-results\">\r\n        {loading ? (\r\n          <p>Loading</p>\r\n        ) : resultsList ? (\r\n          <div>\r\n            <br />\r\n            <h2>Search Results</h2>\r\n            <ul>{resultsList}</ul>\r\n          </div>\r\n        ) : searchParams.searchTerm ? (\r\n          <div>\r\n            <br />\r\n            <h2>No results found.</h2>\r\n          </div>\r\n        ) : \r\n          <MarkdownParser file={queries.file} sect={queries.sect} />\r\n        }\r\n      </section>\r\n      <footer>\r\n        <p>\r\n          This project is maintained by{\" \"}\r\n          <a href=\"https://github.com/EbookFoundation\" target=\"_blank\" rel=\"noreferrer\">\r\n            EbookFoundation\r\n          </a>\r\n        </p>\r\n        <p>\r\n          <small>\r\n            Hosted on GitHub Pages — Theme by{\" \"}\r\n            <a href=\"https://github.com/orderedlist\" target=\"_blank\" rel=\"noreferrer\">\r\n              orderedlist\r\n            </a>\r\n          </small>\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App';\r\nimport ThemeContextWrapper from './darkMode';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nReactDOM.render(\r\n<CookiesProvider>\r\n\t<ThemeContextWrapper>\r\n\t  <React.StrictMode>\r\n\t\t<App />\r\n\t  </React.StrictMode>\r\n\t</ThemeContextWrapper>\r\n</CookiesProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}